{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Message/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","d","di","to","activeClassName","active","nav","imge","src","img","title","name","namge","Message","dialogs","block","messageImg","photos","small","defaultPhoto","message","deleteButton","onClick","deleteMessage","maxLength100","maxTextLength","AddMessageForm","reduxForm","form","onSubmit","handleSubmit","fieldComponent","Textarea","undefined","Dialogs","useEffect","getAuthPhotosThunk","userId","dialogElements","dialogsItems","map","key","messageElements","messagesItems","m","names","messages","bot","values","trim","length","onAddMessage","dialog","dialogsActions","compose","connect","state","dialogsPage","isAuth","auth","withRedirect"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,SAAW,0BAA0B,MAAQ,uBAAuB,IAAM,qBAAqB,WAAa,4BAA4B,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,OAAS,wBAAwB,MAAQ,yB,oBCA7cD,EAAOC,QAAU,CAAC,GAAK,uBAAuB,IAAM,wBAAwB,KAAO,yBAAyB,MAAQ,0BAA0B,OAAS,6B,iHCiBxIC,EAbyB,SAACC,GACrC,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,yBAAKC,UAAWC,IAAEC,IACd,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,QAClC,yBAAKL,UAAWC,IAAEK,KACd,yBAAKN,UAAWC,IAAEM,KAAMC,IAAKX,EAAMY,IAAKC,MAAOb,EAAMc,OACrD,0BAAMX,UAAWC,IAAEW,OAAQf,EAAMc,U,iBCQtCE,EAd8B,SAAChB,GAC1C,OACI,yBAAKG,UAAWc,IAAQC,OACpB,yBAAKf,UAAWc,IAAQE,YACpB,yBAAKR,IAAKX,EAAMoB,OAAOC,MAAQrB,EAAMoB,OAAOC,MAAQC,OAExD,yBAAKnB,UAAWc,IAAQM,SAAUvB,EAAMuB,SACxC,yBAAKpB,UAAWc,IAAQO,cACpB,uBAAGrB,UAAS,UAAKc,IAAQI,MAAb,mBAAqCI,QAAS,kBAAMzB,EAAM0B,cAAc1B,EAAME,MAA1F,a,yBCRVyB,EAAeC,YAAc,KAetBC,EAAiBC,YAAiC,CAACC,KAAM,UAAxCD,EAZyC,SAAC9B,GAEpE,OAAO,0BAAMgC,SAAUhC,EAAMiC,cACzB,6BACKC,YAAuCC,IAAS,UAAW,sBAAuB,CAACR,QAAeS,OAAWA,IAElH,6BACI,oDCyBGC,EAhC6B,SAACrC,GAEzCsC,qBAAU,WACNtC,EAAMuC,mBAAmBvC,EAAMwC,UAChC,IAEH,IAAIC,EAAiBzC,EAAM0C,aAAaC,KAAI,SAAAvC,GAAC,OAAI,kBAAC,EAAD,CAAYQ,IAAKR,EAAEQ,IAAKE,KAAMV,EAAEU,KAAMZ,GAAIE,EAAEF,GAAI0C,IAAKxC,EAAEF,QACpG2C,EAAkB7C,EAAM8C,cAAcH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASrB,GAAI6C,EAAE7C,GAAI0C,IAAKG,EAAE7C,GAAIkB,OAAQpB,EAAMoB,OAAQM,cAAe1B,EAAM0B,mBAUhJ,OACI,yBAAKvB,UAAWc,IAAQA,SACpB,yBAAKd,UAAWc,IAAQ+B,OACnBP,GAEL,yBAAKtC,UAAWc,IAAQgC,UACnBJ,GAEL,yBAAK1C,UAAWc,IAAQiC,KACpB,kBAACrB,EAAD,CAAgBG,SAhBX,SAACmB,GACVA,EAAO5B,SAAW4B,EAAO5B,QAAQ6B,OAAOC,OAAS,IACjDrD,EAAMsD,aAAaH,EAAO5B,SAC1BvB,EAAMuD,OAAOJ,OAAO5B,QAAU,U,uBCXpC+B,EAAeE,IAAeF,aAC9B5B,EAAgB8B,IAAe9B,cAatB+B,sBACXC,aAZoB,SAACC,GACrB,MAAO,CACHjB,aAAciB,EAAMC,YAAYlB,aAChCI,cAAea,EAAMC,YAAYd,cACjCe,OAAQF,EAAMG,KAAKD,OACnBN,OAAQI,EAAM5B,KAAKwB,OACnBf,OAAQmB,EAAMG,KAAKtB,OACnBpB,OAAQuC,EAAMC,YAAYxC,UAKmD,CAACkC,eAAc5B,gBAAea,yBAC/GwB,IAFWN,CAGbpB","file":"static/js/3.dfa2b63b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3dODe\",\"names\":\"Dialogs_names__35zNb\",\"messages\":\"Dialogs_messages__1BEz9\",\"block\":\"Dialogs_block__2TtGA\",\"bot\":\"Dialogs_bot__2wgsP\",\"messageImg\":\"Dialogs_messageImg__DM2Kn\",\"message\":\"Dialogs_message__1MUZ7\",\"deleteButton\":\"Dialogs_deleteButton__2IuWD\",\"left\":\"Dialogs_left__I8fo1\",\"right\":\"Dialogs_right__H_ZFU\",\"tiny\":\"Dialogs_tiny__1FjeJ\",\"small\":\"Dialogs_small__1kMJe\",\"medium\":\"Dialogs_medium__1uhm1\",\"large\":\"Dialogs_large__2wmuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"di\":\"DialogItem_di__2VpTq\",\"nav\":\"DialogItem_nav__3jrjs\",\"imge\":\"DialogItem_imge__3qzXp\",\"namge\":\"DialogItem_namge__3aAFp\",\"active\":\"DialogItem_active__1aAyz\"};","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport d from './DialogItem.module.css';\r\n\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={d.di}>\r\n            <NavLink to={path} activeClassName={d.active}>\r\n                <div className={d.nav}>\r\n                    <img className={d.imge} src={props.img} title={props.name}/>\r\n                    <span className={d.namge}>{props.name}</span>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;\r\n\r\ntype PropsType = {\r\n    id: number\r\n    img: string\r\n    name: string\r\n}\r\n","import dialogs from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport defaultPhoto from \"../../Users/defaultPhoto.jpg\"\r\nimport {PhotosType} from \"../../../types/types\";\r\n\r\n\r\nconst Message: React.FC<MessagesPropsType> = (props) => {\r\n    return (\r\n        <div className={dialogs.block}>\r\n            <div className={dialogs.messageImg}>\r\n                <img src={props.photos.small ? props.photos.small : defaultPhoto} />\r\n            </div>\r\n            <div className={dialogs.message}>{props.message}</div>\r\n            <div className={dialogs.deleteButton}>\r\n                <i className={`${dialogs.small} material-icons`} onClick={() => props.deleteMessage(props.id)}>delete</i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\ntype MessagesPropsType = {\r\n    message: string\r\n    deleteMessage: (id: number) => void\r\n    id: number\r\n    photos: PhotosType\r\n\r\n}","import {maxTextLength, required} from \"../../../utilits/validators/validators\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {fieldComponent, GetStringKeys, Textarea} from \"../../common/formsControl\";\r\nimport React from \"react\";\r\nimport {DialogsFormValuesType} from \"../Dialogs\";\r\n\r\nconst maxLength100 = maxTextLength(100);\r\ntype AddMessageFormKeysType = GetStringKeys<DialogsFormValuesType>\r\n\r\nconst DialogArea: React.FC<InjectedFormProps<DialogsFormValuesType>> = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            {fieldComponent<AddMessageFormKeysType>(Textarea,'message', 'Add Your message...', [maxLength100], undefined, undefined)}\r\n        </div>\r\n        <div>\r\n            <button>Add message</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const AddMessageForm = reduxForm<DialogsFormValuesType>({form: 'dialog'})(DialogArea);\r\n","import React, {useEffect} from \"react\";\r\nimport dialogs from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {AddMessageForm} from \"./Message/AddMessageForm\";\r\nimport {DialogsItemsType, MessagesItemsType, PhotosType} from \"../../types/types\";\r\nimport {FormState} from \"redux-form\";\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getAuthPhotosThunk(props.userId)\r\n    }, [])\r\n\r\n    let dialogElements = props.dialogsItems.map(d => <DialogItem img={d.img} name={d.name} id={d.id} key={d.id}/>);\r\n    let messageElements = props.messagesItems.map(m => <Message message={m.message} id={m.id} key={m.id} photos={props.photos} deleteMessage={props.deleteMessage}/>);\r\n\r\n\r\n    let addMessage = (values: DialogsFormValuesType) => {\r\n        if (values.message && values.message.trim().length > 0) {\r\n            props.onAddMessage(values.message);\r\n            props.dialog.values.message = ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={dialogs.dialogs}>\r\n            <div className={dialogs.names}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={dialogs.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <div className={dialogs.bot}>\r\n                <AddMessageForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\ntype DialogsPropsType = {\r\n    dialogsItems: Array<DialogsItemsType>\r\n    messagesItems: Array<MessagesItemsType>\r\n    onAddMessage: (message: string) => void\r\n    dialog: DialogsFormState\r\n    deleteMessage: (id: number) => void\r\n    getAuthPhotosThunk: (userId: number) => void\r\n    userId: number\r\n    photos: PhotosType\r\n}\r\n\r\ninterface DialogsFormState extends FormState {\r\n    values: {message: string}\r\n}\r\nexport type DialogsFormValuesType = {\r\n    message: string\r\n}\r\n","import React from \"react\";\r\nimport {dialogsActions, getAuthPhotosThunk} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withRedirect from \"../../HOC/withRedirectComponent\";\r\nimport {compose} from \"redux\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {DialogsItemsType, MessagesItemsType, PhotosType} from \"../../types/types\";\r\nimport {FormState} from \"redux-form\";\r\n\r\n\r\nconst onAddMessage = dialogsActions.onAddMessage\r\nconst deleteMessage = dialogsActions.deleteMessage\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        dialogsItems: state.dialogsPage.dialogsItems,\r\n        messagesItems: state.dialogsPage.messagesItems,\r\n        isAuth: state.auth.isAuth,\r\n        dialog: state.form.dialog,\r\n        userId: state.auth.userId,\r\n        photos: state.dialogsPage.photos\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>(mapStateToProps, {onAddMessage, deleteMessage, getAuthPhotosThunk}),\r\n    withRedirect\r\n)(Dialogs);\r\n\r\ntype MapStatePropsType = {\r\n    dialogsItems: Array<DialogsItemsType>\r\n    messagesItems: Array<MessagesItemsType>\r\n    isAuth: boolean\r\n    dialog: FormState\r\n    userId: number | null\r\n    photos: PhotosType\r\n}\r\ntype MapDispatchPropsType = {\r\n    onAddMessage: (message: string) => void\r\n    deleteMessage: (id: number) => void\r\n    getAuthPhotosThunk: (userId: number) => void\r\n}\r\n\r\n\r\n"],"sourceRoot":""}