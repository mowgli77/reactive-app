{"version":3,"sources":["components/Users/UsersContainer.tsx"],"names":["UsersComponentContainer","onChangedPage","currentPage","props","requestUsersThunk","pageSize","filter","onChangedFilter","this","term","friend","totalUsersCount","users","follow","unfollow","followProcessing","buttonDisable","isFetching","React","Component","usersActions","compose","withRedirect","connect","state","getUsersSelector","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetchinge","getFollowProcessing","getFilter"],"mappings":"+NAkBMA,E,4MAMFC,cAAgB,SAACC,GACb,EAAKC,MAAMC,kBAAkBF,EAAa,EAAKC,MAAME,SAAU,EAAKF,MAAMG,S,EAE9EC,gBAAkB,SAACD,GACf,EAAKH,MAAMC,kBAAkB,EAAG,EAAKD,MAAME,SAAUC,I,kEAPrDE,KAAKL,MAAMC,kBAAkBI,KAAKL,MAAMD,YAAaM,KAAKL,MAAME,SAAU,CAACI,KAAM,GAAIC,OAAQ,S,+BAW7F,OAAO,oCACH,kBAAC,IAAD,CAAOC,gBAAiBH,KAAKL,MAAMQ,gBAC5BN,SAAUG,KAAKL,MAAME,SACrBJ,cAAeO,KAAKP,cACpBW,MAAOJ,KAAKL,MAAMS,MAClBC,OAAQL,KAAKL,MAAMU,OACnBC,SAAUN,KAAKL,MAAMW,SACrBZ,YAAaM,KAAKL,MAAMD,YACxBa,iBAAkBP,KAAKL,MAAMY,iBAC7BC,cAAeR,KAAKL,MAAMa,cAC1BC,WAAYT,KAAKL,MAAMc,WACvBV,gBAAiBC,KAAKD,uB,GAzBHW,IAAMC,WA2CtCH,EAAgBI,IAAaJ,cAEpBK,sBACXC,IACAC,aAfoB,SAACC,GACrB,MAAO,CACHZ,MAAOa,YAAiBD,GACxBb,gBAAiBe,YAAmBF,GACpCnB,SAAUsB,YAAYH,GACtBtB,YAAa0B,YAAeJ,GAC5BP,WAAYY,YAAeL,GAC3BT,iBAAkBe,YAAoBN,GACtClB,OAAQyB,YAAUP,MAQJ,CACdX,WACAC,aACAE,gBACAZ,wBAPOiB,CASbrB","file":"static/js/5.c2561eeb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {FilterType, follow, requestUsersThunk, unfollow, usersActions} from \"../../redux/usersReducer\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFilter,\r\n    getFollowProcessing,\r\n    getIsFetchinge,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector,\r\n} from \"../../redux/usersSelector\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {UsersType} from \"../../types/types\";\r\nimport withRedirect from \"../../HOC/withRedirectComponent\";\r\n\r\n\r\nclass UsersComponentContainer extends React.Component<UserContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsersThunk(this.props.currentPage, this.props.pageSize, {term: '', friend: null});\r\n    }\r\n\r\n    onChangedPage = (currentPage: number): void => {\r\n        this.props.requestUsersThunk(currentPage, this.props.pageSize, this.props.filter);\r\n    }\r\n    onChangedFilter = (filter: FilterType): void => {\r\n        this.props.requestUsersThunk(1, this.props.pageSize, filter);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onChangedPage={this.onChangedPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   currentPage={this.props.currentPage}\r\n                   followProcessing={this.props.followProcessing}\r\n                   buttonDisable={this.props.buttonDisable}\r\n                   isFetching={this.props.isFetching}\r\n                   onChangedFilter={this.onChangedFilter}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetchinge(state),\r\n        followProcessing: getFollowProcessing(state),\r\n        filter: getFilter(state),\r\n    }\r\n}\r\nconst buttonDisable = usersActions.buttonDisable\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRedirect,\r\n    connect<MapStateUsersContainerPropsType, MapDispatchUsersContainerPropsType, {}, StateType>\r\n    (mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        buttonDisable,\r\n        requestUsersThunk,\r\n    })\r\n)(UsersComponentContainer)\r\n\r\ntype MapStateUsersContainerPropsType = {\r\n    users: UsersType[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followProcessing: number[],\r\n    filter: FilterType\r\n}\r\ntype MapDispatchUsersContainerPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    buttonDisable: (followProcessing: boolean, userId: number) => void\r\n    requestUsersThunk: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n}\r\ntype UserContainerPropsType = MapStateUsersContainerPropsType & MapDispatchUsersContainerPropsType\r\n"],"sourceRoot":""}