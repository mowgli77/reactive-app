{"version":3,"sources":["components/Users/Users.module.css","components/common/Pagination/Pagination.module.css","components/common/Pagination/Pagination.tsx","components/common/User/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/index.js","redux/usersSelector.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","Pagination","React","memo","portionSize","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","useState","portionNumber","setPortionNumber","portionsCount","leftBorder","rightBorder","className","s","pagination","onClick","tiny","filter","p","map","currentPage","selectedPage","undefined","onChangedPage","User","user","userBlock","userPhoto","to","id","src","photos","small","defaultPhoto","photo","name","follow","followed","disabled","followProcessing","some","unfollow","Users","totalUsersCount","isFetching","Preloader","userPage","users","u","key","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsersSelector","state","usersPage","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetchinge","getFollowProcessing","UsersComponentContainer","requestUsersThunk","this","buttonDisable","Component","usersActions","compose","withRedirect","connect"],"mappings":"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","file":"static/js/4.6ae57a8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPage\":\"Users_userPage__3ow8f\",\"userBlock\":\"Users_userBlock__1k7NG\",\"userPhoto\":\"Users_userPhoto__2J1nL\",\"photo\":\"Users_photo__2f-ZP\",\"name\":\"Users_name__iFra2\",\"follow\":\"Users_follow__WsZKu\",\"selectedPage\":\"Users_selectedPage__LM3hz\",\"status\":\"Users_status__t7jXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__w-l80\",\"selectedPage\":\"Pagination_selectedPage__2XPhK\",\"left\":\"Pagination_left__1Tsvp\",\"right\":\"Pagination_right__1LcjQ\",\"tiny\":\"Pagination_tiny__3QN9n\",\"small\":\"Pagination_small__2cnIr\",\"medium\":\"Pagination_medium__1DXv_\",\"large\":\"Pagination_large__1Eu6n\"};","import s from \"./Pagination.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nexport const Pagination: React.FC<PropsType> = React.memo(({portionSize, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let portionsCount = Math.ceil(pagesCount / portionSize);\r\n    let leftBorder = portionSize * (portionNumber - 1) + 1;\r\n    let rightBorder = portionSize * portionNumber;\r\n\r\n    return <div className={s.pagination}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                    <i className={`${s.tiny} material-icons`}>fast_rewind</i></button>}\r\n            {pages.filter(p => rightBorder >= p && p >= leftBorder).map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : undefined}\r\n                             onClick={() => props.onChangedPage(p)}><button>{p}</button></span>\r\n            })\r\n            }\r\n            {portionsCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>\r\n                    <i className={`${s.tiny} material-icons`}>fast_forward</i>\r\n                </button>}\r\n    </div>\r\n})\r\n\r\ntype PropsType = {\r\n    portionSize: number\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onChangedPage: (p: number) => void\r\n}\r\n","import {NavLink} from \"react-router-dom\";\r\nimport defaultPhoto from \"../../Users/defaultPhoto.jpg\";\r\nimport s from \"../../Users/Users.module.css\";\r\nimport React from \"react\";\r\nimport {UsersType} from \"../../../types/types\";\r\n\r\nexport const User: React.FC<UserPropsType> = ({user, ...props}) => {\r\n    return <div className={s.userBlock}>\r\n        <NavLink className={s.userPhoto} to={'/profile/' + user.id}>\r\n            <img src={user.photos.small != null ? user.photos.small : defaultPhoto} className={s.photo}/>\r\n        </NavLink>\r\n        <div className={s.name}>\r\n            <b>{user.name}</b>\r\n        </div>\r\n        {/*<div className={s.status }>*/}\r\n        {/*    {user.status && <p><b>My status: </b>{user.status}</p>}*/}\r\n        {/*</div>*/}\r\n        <div className={s.follow}>\r\n            {user.followed ? <button disabled={props.followProcessing.some(id => id === user.id)}\r\n                    onClick={() => props.unfollow(user.id)}>\r\n                    Unfollow</button>\r\n                :\r\n                <button disabled={props.followProcessing.some(id => id === user.id)}\r\n                    onClick={() => props.follow(user.id)}>\r\n                    Follow</button>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    followProcessing: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}","import React from \"react\";\r\nimport {Pagination} from \"../common/Pagination/Pagination\";\r\nimport {User} from \"../common/User/User\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport {UsersType} from \"../../types/types\";\r\nimport s from \"./Users.module.css\"\r\n\r\n\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    return <div>\r\n        <Pagination totalItemsCount={props.totalUsersCount} pageSize={props.pageSize} currentPage={props.currentPage}\r\n                    portionSize={10} onChangedPage={props.onChangedPage}/>\r\n        {props.isFetching === true ? <Preloader/> : null}\r\n        <div className={s.userPage}>\r\n            {props.users.map(u => <User {...props} user={u} key={u.id}/>)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;\r\n\r\ntype UsersPropsType = {\r\n    users: UsersType[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followProcessing: number[]\r\n    onChangedPage: (currentPage: number) => void\r\n    buttonDisable: (followProcessing: boolean, userId: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n}\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {createSelector} from \"reselect\";\r\nimport {StateType} from \"./reduxStore\";\r\nimport {UsersType} from \"../types/types\";\r\n\r\nconst getUsers = (state: StateType): UsersType[] | null => {\r\n    return state.usersPage.users\r\n    }\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users!.filter(u => true)\r\n})\r\n\r\nexport const getTotalUsersCount = (state: StateType): number => {\r\n    return state.usersPage.totalUsersCount\r\n    }\r\n\r\nexport const getPageSize = (state: StateType): number => {\r\n        return state.usersPage.pageSize\r\n    }\r\n\r\nexport const getCurrentPage = (state: StateType): number => {\r\n        return state.usersPage.currentPage\r\n    }\r\n\r\nexport const getIsFetchinge = (state: StateType): boolean => {\r\n        return state.usersPage.isFetching\r\n    }\r\n\r\nexport const getFollowProcessing = (state: StateType): number[] => {\r\n        return state.usersPage.followProcessing\r\n    }","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {follow, requestUsersThunk, unfollow, usersActions} from \"../../redux/usersReducer\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowProcessing,\r\n    getIsFetchinge,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersSelector,\r\n} from \"../../redux/usersSelector\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport {UsersType} from \"../../types/types\";\r\nimport withRedirect from \"../../HOC/withRedirectComponent\";\r\n\r\n\r\nclass UsersComponentContainer extends React.Component<UserContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsersThunk(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onChangedPage = (currentPage: number): void => {\r\n        this.props.requestUsersThunk(currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   onChangedPage={this.onChangedPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   currentPage={this.props.currentPage}\r\n                   followProcessing={this.props.followProcessing}\r\n                   buttonDisable={this.props.buttonDisable}\r\n                   isFetching={this.props.isFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetchinge(state),\r\n        followProcessing: getFollowProcessing(state),\r\n    }\r\n}\r\nconst buttonDisable = usersActions.buttonDisable\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRedirect,\r\n    connect<MapStateUsersContainerPropsType, MapDispatchUsersContainerPropsType, {}, StateType>\r\n    (mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        buttonDisable,\r\n        requestUsersThunk,\r\n    })\r\n)(UsersComponentContainer)\r\n\r\ntype MapStateUsersContainerPropsType = {\r\n    users: UsersType[]\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followProcessing: number[]\r\n}\r\ntype MapDispatchUsersContainerPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    buttonDisable: (followProcessing: boolean, userId: number) => void\r\n    requestUsersThunk: (currentPage: number, pageSize: number) => void\r\n}\r\ntype UserContainerPropsType = MapStateUsersContainerPropsType & MapDispatchUsersContainerPropsType\r\n"],"sourceRoot":""}