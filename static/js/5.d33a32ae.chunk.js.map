{"version":3,"sources":["components/Login/Login.module.css","HOC/withRedirectComponentToProfile.tsx","components/Login/LoginReduxForm.tsx","components/Login/Login.tsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withRedirectToProfile","Component","connect","props","restProps","to","reduxForm","form","onSubmit","handleSubmit","fieldComponent","Input","required","notEmail","undefined","className","s","err","error","captchaURL","src","compose","loginThunk","login","LoginReduxForm","values"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,mGCItBC,EAAkB,SAACC,GAAD,MAAuB,CAACC,OAAQD,EAAME,KAAKD,SAclDE,MAXf,SAAkCC,GAQ9B,OADqCC,YAA6CN,EAA7CM,EALrC,SAAwCC,GAA2B,IAC1DL,EAAwBK,EAAxBL,OAAWM,EAD8C,YACjCD,EADiC,YAE1D,OAAQL,EAAS,kBAAC,IAAD,CAAUO,GAAI,aAC/B,kBAACJ,EAAeG,O,4DCabE,cAAsD,CAACC,KAAM,SAA7DD,EAnBoG,SAACH,GAEhH,OAAO,0BAAMK,SAAUL,EAAMM,cACxBC,YAAkCC,IAAM,QAAS,QAAS,CAACC,IAAUC,KAAW,aAASC,GACzFJ,YAAkCC,IAAM,WAAY,WAAY,CAACC,KAAW,gBAAYE,GACxFJ,YAAkCC,IAAM,kBAAcG,EAAW,GAAI,WAAY,eAClF,yBAAKC,UAAWC,IAAEC,KACd,8BAAOd,EAAMe,QAEjB,6BACKf,EAAMgB,YAAc,yBAAKC,IAAKjB,EAAMgB,aACpChB,EAAMgB,YAAcT,YAAkCC,IAAO,UAAW,uCAAwC,CAACC,UAAWE,OAAWA,IAE5I,6BACI,8CCQGO,sBACXnB,aALkB,SAACL,GAAD,MAAuB,CACzCsB,WAAYtB,EAAME,KAAKoB,cAI0D,CAACG,iBAClFtB,EAFWqB,EAjByB,SAAClB,GAKrC,OAAO,yBAAKY,UAAWC,IAAEO,OACrB,qCACA,6BACI,kBAACC,EAAD,CAAgBhB,SANR,SAACiB,GACbtB,EAAMmB,WAAWG,IAKwBN,WAAYhB,EAAMgB","file":"static/js/5.d33a32ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3Njjb\"};","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: StateType) => ({isAuth: state.auth.isAuth});\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\nfunction withRedirectToProfile<P>(Component: React.ComponentType<P>){\r\n\r\n    function withRedirectComponentToProfile(props: MapStatePropsType) {\r\n        let {isAuth, ...restProps} = props\r\n            return (isAuth ? <Redirect to={'/profile'}/> :\r\n            <Component { ...restProps as P}/>)\r\n    }\r\n    const withConnectRedirectComponent = connect<MapStatePropsType, {}, P, StateType>(mapStateToProps)(withRedirectComponentToProfile);\r\n    return withConnectRedirectComponent;\r\n}\r\n\r\nexport default withRedirectToProfile;\r\n","import {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {fieldComponent, GetStringKeys, Input} from \"../common/formsControl\";\r\nimport {notEmail, required} from \"../../utilits/validators/validators\";\r\nimport s from \"../common/formsControl.module.css\";\r\nimport {LoginFormValuesType} from \"../../types/types\";\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {fieldComponent<LoginFormKeysType>(Input,'email', 'email', [required, notEmail], 'email', undefined)}\r\n        {fieldComponent<LoginFormKeysType>(Input,'password', 'Password', [required], 'password', undefined)}\r\n        {fieldComponent<LoginFormKeysType>(Input,'rememberMe', undefined, [], 'checkbox', 'Remember me')}\r\n        <div className={s.err}>\r\n            <span>{props.error}</span>\r\n        </div>\r\n        <div>\r\n            {props.captchaURL && <img src={props.captchaURL}/>}\r\n            {props.captchaURL && fieldComponent<LoginFormKeysType>(Input, 'captcha', 'Please, enter symbols from the image', [required], undefined, undefined)}\r\n        </div>\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({form: 'login'})(LoginForm);\r\n\r\n\r\ntype LoginFormOwnPropsType = {\r\n    captchaURL: string | null\r\n}\r\n\r\ntype LoginFormKeysType = GetStringKeys<LoginFormValuesType>\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../../redux/authReducer\";\r\nimport {compose} from \"redux\";\r\nimport withRedirectToProfile from \"../../HOC/withRedirectComponentToProfile\";\r\nimport {StateType} from \"../../redux/reduxStore\";\r\nimport s from \"./Login.module.css\"\r\nimport {LoginFormValuesType} from \"../../types/types\";\r\nimport LoginReduxForm from \"./LoginReduxForm\";\r\n\r\n\r\n\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    let loginning = (values: LoginFormValuesType) => {\r\n        props.loginThunk(values);\r\n    }\r\n    return <div className={s.login}>\r\n        <h2>Login</h2>\r\n        <div>\r\n            <LoginReduxForm onSubmit={loginning} captchaURL={props.captchaURL}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state: StateType) => ({\r\n    captchaURL: state.auth.captchaURL\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>(mapStateToProps, {loginThunk}),\r\n    withRedirectToProfile\r\n)(Login);\r\n\r\ntype MapStatePropsType = {\r\n    captchaURL: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    loginThunk: (values: LoginFormValuesType) => void\r\n}\r\n\r\ntype LoginPropsType = MapStatePropsType & MapDispatchPropsType\r\n"],"sourceRoot":""}